/dts-v1/;
#include "sun8i-h3.dtsi"
#include "sunxi-common-regulators.dtsi"

#include <dt-bindings/gpio/gpio.h>

/ {
    model = "FriendlyARM NanoPi NEO Air";
    compatible = "friendlyarm,nanopi-neo-air", "allwinner,sun8i-h3";

    aliases {
        serial0 = &uart0;
        serial1 = &uart1;
        serial2 = &uart2;
        mmc0 = &mmc0; // If you are not asign mmc id, kernel won't modefine as correct
        mmc1 = &mmc1; // If you are not asign mmc id, kernel won't modefine as correct
        mmc2 = &mmc2; // If you are not asign mmc id, kernel won't modefine as correct
    };

    chosen {
        stdout-path = "serial0:115200n8";
    };

    leds {
        compatible = "gpio-leds";

        pwr {
            label = "nanopi:green:pwr";
            gpios = <&r_pio 0 10 GPIO_ACTIVE_HIGH>; /* PL10 */
            default-state = "on";
        };

        status {
            label = "nanopi:blue:status";
            gpios = <&pio 0 10 GPIO_ACTIVE_HIGH>; /* PA10 */
            default-state = "on";
        };
    };

    wifi_pwrseq: wifi_pwrseq {
        compatible = "mmc-pwrseq-simple";
        reset-gpios = <&r_pio 0 7 GPIO_ACTIVE_LOW>; /* PL7 */
        pinctrl-names = "default";
        pinctrl-0 = <&wifi_en_pin>;
        post-power-on-delay-ms = <5000>;
    };

    cam_xclk: cam-xclk {
                #clock-cells = <0>;
                compatible = "fixed-clock";
                clock-frequency = <24000000>;
                clock-output-names = "cam-xclk";
    };

    reg_cam_avdd: cam-avdd {
            compatible = "regulator-fixed";
            regulator-name = "cam-avdd";
            regulator-min-microvolt = <2800000>;
            regulator-max-microvolt = <2800000>;
            vin-supply = <&reg_vcc3v3>;
    };

    reg_cam_dovdd: cam-dovdd {
            compatible = "regulator-fixed";
            regulator-name = "cam-dovdd";
            regulator-min-microvolt = <1800000>;
            regulator-max-microvolt = <1800000>;
            vin-supply = <&reg_vcc3v3>;
    };

    reg_cam_dvdd: cam-dvdd {
            compatible = "regulator-fixed";
            regulator-name = "cam-dvdd";
            regulator-min-microvolt = <1500000>;
            regulator-max-microvolt = <1500000>;
            vin-supply = <&reg_vcc3v3>;
    };

	reserved-memory {
        #address-cells = <0x01>;
        #size-cells = <0x01>;
        ranges;
        cma_pool: cma@43c00000 {
        	compatible = "shared-dma-pool";
        	reusable;
            size = <0x06000000>; // 96MiB, just let cma driver auto done this job
        	linux,cma-default;
        	status = "okay";
        };
	};

	soc {
	    compatible = "simple-bus";
	    #address-cells = <0x01>;
	    #size-cells = <0x01>;
        
	    ve: video-engine@1c0e000 {
	    	compatible = "allwinner,sunxi-cedar-ve";
	    	reg = <0x01c0e000 0x1000>,
	    	          <0x01c00000 0x10>,
	    	          <0x01c20000 0x800>;
	    	memory-region = <&cma_pool>;
	    	syscon = <&syscon>;
	    	clocks = <&ccu 0x29>, <&ccu 0x6c>, //CLK_BUS_VE, CLK_VE
	    	         <&ccu 0x61>; //CLK_DRAM_VE
	    	clock-names = "ahb", "mod", "ram";
	    	resets = <&ccu 0x1a>; //RST_BUS_VE
	    	interrupts = <0x0 58 0x04>; //GIC_SPI, 58, IRQ_TYPE_LEVEL_HIGH
	    	allwinner,sram = <&ve_sram 1>;
	    	status = "okay";
	    };
	};
};

&ccu {
    // APB2 Configuration Register, see datasheet 0x0058
    apb2_reg = <0x02010002>; /* PLL6 div in 600/2/3 = 100MHZ for 460800 baudrate uart */
};

&syscon {
    compatible = "allwinner,sun8i-h3-system-control","syscon"; //add syscon module load
};


&r_pio {
    wifi_en_pin: wifi_en_pin {
        pins = "PL7";
        function = "gpio_out";
    };
};

&pio{
    mmc0_cd_pin: mmc0_cd_pin {
        pins = "PF6";
        function = "gpio_in";
        bias-pull-up;
    };
};

&mmc0 {
	vmmc-supply = <&reg_vcc3v3>;
	bus-width = <4>;
	cd-gpios = <&pio 5 6 GPIO_ACTIVE_LOW>; /* PF6 */
	boot_device = <0>;
	non-removable;
	pinctrl-names = "default";
	pinctrl-0 = <&mmc0_cd_pin &mmc0_pins>;
	status = "okay";
};

&mmc1 {
	vmmc-supply = <&reg_vcc3v3>;
	vqmmc-supply = <&reg_vcc3v3>;
	mmc-pwrseq = <&wifi_pwrseq>;
	bus-width = <4>;
	non-removable;
	status = "okay";

    brcmf: bcrmf@1 {
		reg = <1>;
		compatible = "brcm,bcm43430a0-fmac";
		interrupt-parent = <&pio>;
		interrupts = <6 10 IRQ_TYPE_LEVEL_LOW>; /* PG10 / EINT10 */
		interrupt-names = "host-wake";
    };
};

&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pa_pins>;
	status = "okay";
};

&uart1 {   
    pinctrl-names = "default";
    pinctrl-0 = <&uart1_pins>;
    status = "okay";

    // hkv-uart {
    //     compatible = "hkv,hkv-uart";
	// 	port {
    //     	ov5640_to_csi: endpoint {
    //         	remote-endpoint = <&csi_from_ov5640>;
    //     		bus-width = <8>;
    //     		data-shift = <2>;
    //     		hsync-active = <1>; 
    //     		vsync-active = <0>; 
    //     		data-active = <1>;  
    //     		pclk-sample = <1>;  
    //         };
    //    	};
   	// };
};

&uart2 {
    pinctrl-names = "default";
    pinctrl-0 = <&uart2_pins>;
	status = "okay";
};

&usbphy {
    /* USB VBUS is always on */
	status = "okay";
};

&spi0 {
	status = "okay";
    spi@0 {
		compatible = "linux,spidev";
		reg = <0x00>;
        spi-max-frequency = <10000000>;
		status = "okay";
    };
};

&csi {
    status = "okay";

    port {
        #address-cells = <1>;
        #size-cells = <0>;

        /* Parallel bus endpoint */
        csi_from_ov5640: endpoint {
            remote-endpoint = <&ov5640_to_csi>;
            bus-width = <8>;
            data-shift = <2>;
            hsync-active = <1>;
            vsync-active = <0>;
            data-active = <1>;
            pclk-sample = <1>;
        };
    };
};

&i2c0 {
    clock-frequency = <800000>;
	status = "okay";
};

&i2c0_pins {
	bias-pull-up;
};

&i2c2 {
	status = "okay";

    ov5640: camera@3c {
        compatible = "ovti,ov5640";
        reg = <0x3c>;
        clocks = <&cam_xclk>;
        clock-names = "xclk";

        reset-gpios = <&pio 4 14 GPIO_ACTIVE_LOW>;
        powerdown-gpios = <&pio 4 15 GPIO_ACTIVE_HIGH>;
        AVDD-supply = <&reg_cam_avdd>;
        DOVDD-supply = <&reg_cam_dovdd>;
        DVDD-supply = <&reg_cam_dvdd>;

        port {
            ov5640_to_csi: endpoint {
                remote-endpoint = <&csi_from_ov5640>;
                bus-width = <8>;
                data-shift = <2>;
                hsync-active = <1>; 
                vsync-active = <0>; 
                data-active = <1>;  
                pclk-sample = <1>;  
            };
        };
    };
};

&i2c2_pins {
	bias-pull-up;
};

&usb_otg {
    dr_mode = "peripheral";
    status = "okay";
};

&ehci0 {
    status = "okay";
};

&ohci0 {
    status = "okay";
};

&ehci1 {
    status = "okay";
};

&ohci1 {
    status = "okay";
};

&ehci2 {
    status = "okay";
};

&ohci2 {
    status = "okay";
};

&ehci3 {
    status = "okay";
};

&ohci3 {
    status = "okay";
};
